GO
USE [SEDPLAN];
GO
ALTER PROCEDURE dbo.stp_CalBOMPlan
		  @ProjectNo NVARCHAR(20),
		  @PlanName NVARCHAR(100)
AS
BEGIN
	--DECLARE @ProjectNo NVARCHAR(20)='S32A1305700'
	--DECLARE @PlanName NVARCHAR(100)='SAB-BCV01-B01-01'

	--1. Prepare temp data
	SELECT * INTO #TMP_DDV
	FROM DD_Variable_Map DDV
	WHERE DDV.Revision=(SELECT MAX(Revision) FROM DD_Variable_Map DDV2 WHERE DDV2.DD_ID=DDV.DD_ID);

	SELECT * INTO #TMP_STD
	FROM STD_Parts STD
	WHERE STD.Revision=(SELECT MAX(Revision) FROM STD_Parts STD2);

	SELECT * INTO #TMP_DDT
	FROM DD_TYPES DDT
	WHERE DDT.Revision=(SELECT MAX(Revision) FROM DD_TYPES DDT2 WHERE DDT2.SA_ID=DDT.SA_ID);

	SELECT * INTO #TMP_SC
	FROM SA_Component SC
	WHERE SC.Revision=(SELECT MAX(Revision) FROM SA_Component SC2 WHERE SC2.SA_ID=SC.SA_ID);

	SELECT * INTO #TMP_BP
	FROM BOM_Plan BP
	WHERE BP.Plan_Name=@PlanName AND BP.Project_No=@ProjectNo
	AND BP.Revision=(SELECT MAX(Revision) FROM BOM_Plan BP2 WHERE BP2.Plan_Name=BP.Plan_Name AND BP2.Project_No=BP.Project_No);

	--CREATE NONCLUSTER INDEX FOR EACH TEMP TABLE
	CREATE NONCLUSTERED INDEX #TMP_DDV_IDX ON #TMP_DDV(DD_ID,VAR_Type,VAR_Value);
	CREATE NONCLUSTERED INDEX #TMP_STD_IDX ON #TMP_STD(Parts_Name,Specification);
	CREATE NONCLUSTERED INDEX #TMP_DDT_IDX ON #TMP_DDT(SA_ID,Parts_Name,Para_Type,Para_Value);
	CREATE NONCLUSTERED INDEX #TMP_SC_IDX ON #TMP_SC(SA_ID,Parts_Name);
	CREATE NONCLUSTERED INDEX #TMP_BP_IDX ON #TMP_BP(SA_ID,SAUID);

	--2. Scan all SA's in BOM_PLAN to find all sub SA 
	DECLARE @REV INT = (SELECT MAX(Revision) FROM BOM_Plan WHERE Plan_Name=@PlanName AND Project_No=Project_No);
	DECLARE @CTIME DATETIME = GETDATE();

	--SELECT * INTO #SUBSA FROM #TMP_BP WHERE 1=2;

	DECLARE @PROJECT_NO NVARCHAR(20);
	DECLARE @PLAN_NAME NVARCHAR(100);
	DECLARE @SA_ID NVARCHAR(50);
	DECLARE @VAR_TYPE NVARCHAR(5);
	DECLARE @VAR_VALUE NVARCHAR(50);
	DECLARE @QUANTITY INT;
	DECLARE @COLOR NVARCHAR(50);
	DECLARE @BP_SAUID BIGINT;
	DECLARE @NEW_SAUID BIGINT;

	DECLARE BP_CURSOR CURSOR 
	FOR SELECT Project_No,Plan_Name,SA_ID,VAR_Type,VAR_Value,Quantity,COLOR,SAUID FROM #TMP_BP;
	OPEN BP_CURSOR

	FETCH NEXT FROM BP_CURSOR INTO @PROJECT_NO, @PLAN_NAME, @SA_ID, @VAR_TYPE, @VAR_VALUE, @QUANTITY, @COLOR, @BP_SAUID;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @NEW_SAUID = (SELECT MAX(SAUID) FROM #TMP_BP);
		SET @NEW_SAUID = @NEW_SAUID + 1;

		--PRINT @SA_ID + ' ' + @VAR_TYPE + ' ' + @VAR_VALUE + ' ' + CAST(@QUANTITY AS VARCHAR) + ' ' + @COLOR;

		--1. Insert Sub SA with necessary parameter
		INSERT INTO #TMP_BP(Project_No,Plan_Name,SA_ID,VAR_Type,VAR_Value,Quantity,COLOR,IsMain,SAUID,Revision,Created_Time)
		SELECT	@PROJECT_NO, @PLAN_NAME, SC.Specification, SC.Para_Type, @VAR_VALUE, @QUANTITY, @COLOR,
				1 AS IsMain, @NEW_SAUID, @REV, @CTIME
		FROM	#TMP_SC SC
		WHERE	SC.SA_ID=@SA_ID AND SC.IsSubSA=1 AND SC.Para_Type=@VAR_TYPE

		--2. Insert LR parameter with above Sub SA
		INSERT INTO #TMP_BP(Project_No,Plan_Name,SA_ID,VAR_Type,VAR_Value,Quantity,COLOR,IsMain,SAUID,Revision,Created_Time)
		SELECT	@PROJECT_NO, @PLAN_NAME, SC.Specification, BP.VAR_Type, BP.VAR_Value, @QUANTITY, @COLOR,
				0 AS IsMain, @NEW_SAUID, @REV, @CTIME
		FROM	#TMP_SC SC, #TMP_BP BP
		WHERE	SC.SA_ID=@SA_ID AND SC.IsSubSA=1 AND SC.Para_Type=@VAR_TYPE
			AND BP.Project_No=@PROJECT_NO AND BP.Plan_Name=@PLAN_NAME 
			AND BP.SA_ID=@SA_ID AND BP.SAUID=@BP_SAUID AND BP.VAR_Type='LR'

		FETCH NEXT FROM BP_CURSOR INTO @PROJECT_NO, @PLAN_NAME, @SA_ID, @VAR_TYPE, @VAR_VALUE, @QUANTITY, @COLOR, @BP_SAUID;
	END

	CLOSE BP_CURSOR;
	DEALLOCATE BP_CURSOR;

	--Check the data in the temp BOM_PLAN
	--SELECT * FROM #TMP_BP where VAR_Type='EW';

	--Begin statistics
	CREATE TABLE #TMP_CATALOGUESUM
	(
		Parts_Name NVARCHAR(100),
		Spec NVARCHAR(100),
		VAR_TYPE NVARCHAR(5),
		VAR_VALUE NVARCHAR(50),
		LHS INT,
		RHS INT,
		PCE INT,
		UNIT_WEIGHT FLOAT,
		Process_ID bigint,
		COLOR NVARCHAR(50),
	)

	-- 1. Calculate for STD parts.	(SC.IsStandard=1)
	INSERT INTO #TMP_CATALOGUESUM
	SELECT SC.Parts_Name,
	SC.Specification AS Spec,
	'' AS VAR_TYPE,
	'' AS VAR_VALUE,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('LHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS LHS,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('RHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS RHS,
	BP.Quantity*SC.PCE AS PCE,
	STD.STD_Weight AS UNIT_WEIGHT,
	SC.Process_ID,
	BP.COLOR
	FROM #TMP_SC SC,#TMP_BP BP, #TMP_BP BP2, #TMP_STD STD
	WHERE BP.IsMain=1 AND SC.SA_ID=BP.SA_ID
	AND BP.SAUID=BP2.SAUID AND BP.SA_ID=BP2.SA_ID AND BP2.VAR_Type='LR'
	AND SC.IsStandard=1
	AND SC.Parts_Name=STD.Parts_Name AND SC.Specification=STD.Specification; 

	-- 2. Calculate for Fixed Weight without Para types. (sc.IsVariable=0 and sc.Para_Type='' and sc.IsStandard=0 AND sc.Var_Type='F')
	INSERT INTO #TMP_CATALOGUESUM
	SELECT SC.Parts_Name,
	SC.Specification AS Spec,
	'' AS VAR_TYPE,
	'' AS VAR_VALUE,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('LHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS LHS,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('RHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS RHS,
	BP.Quantity*SC.PCE AS PCE,
	DDV.VAR_Weight AS UNIT_WEIGHT,
	SC.Process_ID,
	CASE 
		WHEN CR.COLOR IS NULL THEN BP.COLOR
		ELSE CR.COLOR
	END AS COLOR
	FROM #TMP_SC SC,#TMP_BP BP, #TMP_BP BP2, #TMP_DDV DDV
	LEFT JOIN DD_COLOR CR ON DDV.DD_ID=CR.DD_ID
	WHERE BP.IsMain=1 AND SC.SA_ID=BP.SA_ID
	AND BP.SAUID=BP2.SAUID AND BP.SA_ID=BP2.SA_ID AND BP2.VAR_Type='LR'
	AND SC.IsVariable=0 AND SC.Para_Type='' AND SC.IsStandard=0 AND SC.VAR_Type='F' AND SC.IsSubSA=0
	AND SC.VAR_Type=DDV.VAR_Type AND SC.Specification=DDV.DD_ID;
	--AND SC.SA_ID='IS01-83-001'
	
	-- 3. Calculate for Fixed Weight with Para type. (sc.IsVariable=0 and sc.Para_Type!='' and sc.IsStandard=0 sc.Var_Type='F')
	INSERT INTO #TMP_CATALOGUESUM
	SELECT SC.Parts_Name,
	DDV.DD_ID AS Spec,
	'' AS VAR_TYPE,
	'' AS VAR_VALUE,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('LHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS LHS,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('RHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS RHS,
	BP.Quantity*SC.PCE AS PCE,
	DDV.VAR_Weight AS UNIT_WEIGHT,
	SC.Process_ID,
	BP.COLOR
	FROM #TMP_SC SC,#TMP_BP BP, #TMP_BP BP2, #TMP_DDV DDV, #TMP_DDT DDT
	WHERE SC.SA_ID=BP.SA_ID
	AND BP.SAUID=BP2.SAUID AND BP.SA_ID=BP2.SA_ID AND BP2.VAR_Type='LR'
	AND SC.IsVariable=0 AND SC.Para_Type!='' AND SC.IsStandard=0 AND SC.VAR_Type='F' AND SC.IsSubSA=0
	AND BP.VAR_Type=SC.Para_Type AND BP.VAR_Value=DDT.Para_Value
	AND SC.SA_ID=DDT.SA_ID AND SC.Para_Type=DDT.Para_Type AND SC.Parts_Name=DDT.Parts_Name
	AND DDV.DD_ID=DDT.DD_ID AND DDV.VAR_Type=SC.VAR_Type;

	-- 4. Calculate for variable weight without Para types. (sc.IsVariable=1 and sc.Para_Type='')
	INSERT INTO #TMP_CATALOGUESUM
	SELECT SC.Parts_Name,
	SC.Specification AS Spec,
	DDV.VAR_Type AS VAR_TYPE,
	DDV.VAR_Value AS VAR_VALUE,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('LHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS LHS,
	BP.Quantity*DBO.FUN_CALBP_LRNUM('RHS',SC.LHS,SC.RHS,BP2.VAR_Value) AS RHS,
	BP.Quantity*SC.PCE AS PCE,
	DDV.VAR_Weight AS UNIT_WEIGHT,
	SC.Process_ID,
	BP.COLOR
	FROM #TMP_SC SC,#TMP_BP BP, #TMP_BP BP2, #TMP_DDV DDV
	WHERE SC.SA_ID=BP.SA_ID AND SC.VAR_Type=BP.VAR_Type
	AND BP.SAUID=BP2.SAUID AND BP.SA_ID=BP2.SA_ID AND BP2.VAR_Type='LR'
	AND SC.IsVariable=1 AND SC.Para_Type=''
	AND DDV.DD_ID=SC.Specification AND DDV.VAR_Type=SC.VAR_Type AND DDV.VAR_Value=BP.VAR_Value;

	-- 5. Calculate for variable weight with Para types. (sc.IsVariable=1 and sc.Para_Type!='')
	INSERT INTO #TMP_CATALOGUESUM
	SELECT SC.Parts_Name,
	DDV.DD_ID AS Spec,
	DDV.VAR_Type AS VAR_TYPE,
	DDV.VAR_Value AS VAR_VALUE,
	BP1_VAR.Quantity*DBO.FUN_CALBP_LRNUM('LHS',SC.LHS,SC.RHS,BP3.VAR_Value) AS LHS,
	BP1_VAR.Quantity*DBO.FUN_CALBP_LRNUM('RHS',SC.LHS,SC.RHS,BP3.VAR_Value) AS RHS,
	BP1_VAR.Quantity*SC.PCE AS PCE,
	DDV.VAR_Weight AS UNIT_WEIGHT,
	SC.Process_ID,
	BP1_VAR.COLOR
	FROM #TMP_SC SC,#TMP_BP BP1_VAR, #TMP_DDV DDV, #TMP_DDT DDT, #TMP_BP BP2_PARA, #TMP_BP BP3
	WHERE SC.SA_ID=BP1_VAR.SA_ID AND SC.VAR_Type=BP1_VAR.VAR_Type 
	AND BP1_VAR.SAUID=BP3.SAUID AND BP1_VAR.SA_ID=BP3.SA_ID AND BP3.VAR_Type='LR'
	AND SC.IsVariable=1 AND SC.Para_Type!=''
	AND SC.SA_ID=BP2_PARA.SA_ID AND SC.Para_Type=BP2_PARA.VAR_Type
	AND SC.SA_ID=DDT.SA_ID AND SC.Parts_Name=DDT.Parts_Name AND SC.Para_Type=DDT.Para_Type AND DDT.Para_Value=BP2_PARA.VAR_Value
	AND DDT.DD_ID=DDV.DD_ID AND DDV.VAR_Type=SC.VAR_Type AND DDV.VAR_Value=BP1_VAR.VAR_Value;

	--DECLARE @PlanName NVARCHAR(100)='BOMPlanTest';
	DECLARE @REVERSION INT = (SELECT MAX(Revision) FROM BOM_Detail BD WHERE BD.Plan_Name=@PlanName AND BD.Project_No=@ProjectNo);
	IF @REVERSION IS NULL
		SET @REVERSION=0;
	ELSE 
		SET @REVERSION = @REVERSION + 1;
	DECLARE @CRTIME DATETIME = GETDATE();

	--SELECT * FROM #TMP_CATALOGUESUM;
	INSERT INTO BOM_Detail(Project_No,Plan_Name,Parts_Name,Specification,VAR_TYPE,VAR_VALUE,LHS,RHS,PCE,Total_Weight,Process_ID,COLOR,Revision,Created_Time)
	SELECT @ProjectNo,@PlanName,CS.Parts_Name,CS.Spec,VAR_TYPE,VAR_VALUE,SUM(CS.LHS),SUM(CS.RHS),SUM(CS.PCE),SUM((CS.LHS+CS.RHS+CS.PCE)*CS.UNIT_WEIGHT),CS.Process_ID,CS.COLOR,@REVERSION,@CRTIME
	FROM #TMP_CATALOGUESUM CS
	GROUP BY CS.Parts_Name,CS.Spec,VAR_TYPE,VAR_VALUE,CS.Process_ID,CS.COLOR
	ORDER BY CS.Parts_Name,CS.Spec ASC;

	DROP TABLE #TMP_DDV;
	DROP TABLE #TMP_STD;
	DROP TABLE #TMP_DDT;
	DROP TABLE #TMP_SC;
	DROP TABLE #TMP_BP;
	DROP TABLE #TMP_CATALOGUESUM;
END

